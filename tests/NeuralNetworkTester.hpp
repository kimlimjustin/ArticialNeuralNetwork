//-------------------------------------------------------------
//【文件名】NeuralNetworkTester.hpp
//【功能模块和目的】神经网络测试器类声明
//【开发者及日期】林钲凯 2025-07-29
//【更改记录】OOP设计的测试类头文件
//-------------------------------------------------------------

#ifndef NEURAL_NETWORK_TESTER_HPP
#define NEURAL_NETWORK_TESTER_HPP

#include "../controller/NetworkController.hpp"
#include <string>

//-------------------------------------------------------------
//【类名】NeuralNetworkTester
//【功能】神经网络测试器类，封装所有测试功能
//【开发者及日期】林钲凯 2025-07-29
//【更改记录】
//-------------------------------------------------------------
class NeuralNetworkTester {
private:
    NetworkController& controller;
    int passedTests;
    int totalTests;
    
    // 私有辅助方法
    //-------------------------------------------------------------
    //【函数名称】printTestHeader
    //【函数功能】打印测试标题信息
    //【参数】testName：测试名称
    //【返回值】无
    //【开发者及日期】林钲凯 2025-07-29
    //【更改记录】
    //-------------------------------------------------------------
    void printTestHeader(const std::string& testName);
    
    //-------------------------------------------------------------
    //【函数名称】recordTestResult
    //【函数功能】记录测试结果并更新统计信息
    //【参数】testName：测试名称，passed：是否通过
    //【返回值】无
    //【开发者及日期】林钲凯 2025-07-29
    //【更改记录】
    //-------------------------------------------------------------
    void recordTestResult(const std::string& testName, bool passed);
    
    // 核心功能测试方法
    //-------------------------------------------------------------
    //【函数名称】testNetworkImport
    //【函数功能】测试神经网络导入功能
    //【参数】无
    //【返回值】bool，测试是否通过
    //【开发者及日期】林钲凯 2025-07-29
    //【更改记录】
    //-------------------------------------------------------------
    bool testNetworkImport();
    
    //-------------------------------------------------------------
    //【函数名称】testNetworkValidation
    //【函数功能】测试网络结构验证功能
    //【参数】无
    //【返回值】bool，测试是否通过
    //【开发者及日期】林钲凯 2025-07-29
    //【更改记录】
    //-------------------------------------------------------------
    bool testNetworkValidation();
    
    //-------------------------------------------------------------
    //【函数名称】testNetworkStructure
    //【函数功能】测试网络结构分析功能
    //【参数】无
    //【返回值】bool，测试是否通过
    //【开发者及日期】林钲凯 2025-07-29
    //【更改记录】
    //-------------------------------------------------------------
    bool testNetworkStructure();
    
    //-------------------------------------------------------------
    //【函数名称】testInference
    //【函数功能】测试神经网络推理功能
    //【参数】无
    //【返回值】bool，测试是否通过
    //【开发者及日期】林钲凯 2025-07-29
    //【更改记录】
    //-------------------------------------------------------------
    bool testInference();
    
    //-------------------------------------------------------------
    //【函数名称】testNetworkModification
    //【函数功能】测试网络参数修改功能
    //【参数】无
    //【返回值】bool，测试是否通过
    //【开发者及日期】林钲凯 2025-07-29
    //【更改记录】
    //-------------------------------------------------------------
    bool testNetworkModification();
    
    //-------------------------------------------------------------
    //【函数名称】testSaveLoad
    //【函数功能】测试网络保存和加载功能
    //【参数】无
    //【返回值】bool，测试是否通过
    //【开发者及日期】林钲凯 2025-07-29
    //【更改记录】
    //-------------------------------------------------------------
    bool testSaveLoad();
    
    //-------------------------------------------------------------
    //【函数名称】testErrorHandling
    //【函数功能】测试错误处理和边界情况
    //【参数】无
    //【返回值】bool，测试是否通过
    //【开发者及日期】林钲凯 2025-07-29
    //【更改记录】
    //-------------------------------------------------------------
    bool testErrorHandling();
    
    // 机器学习能力测试方法
    //-------------------------------------------------------------
    //【函数名称】testXORProblem
    //【函数功能】测试XOR逻辑问题处理能力
    //【参数】无
    //【返回值】bool，测试是否通过
    //【开发者及日期】林钲凯 2025-07-29
    //【更改记录】
    //-------------------------------------------------------------
    bool testXORProblem();
    
    //-------------------------------------------------------------
    //【函数名称】testClassification
    //【函数功能】测试多类分类任务处理能力
    //【参数】无
    //【返回值】bool，测试是否通过
    //【开发者及日期】林钲凯 2025-07-29
    //【更改记录】
    //-------------------------------------------------------------
    bool testClassification();
    
    //-------------------------------------------------------------
    //【函数名称】testRegression
    //【函数功能】测试回归任务处理能力
    //【参数】无
    //【返回值】bool，测试是否通过
    //【开发者及日期】林钲凯 2025-07-29
    //【更改记录】
    //-------------------------------------------------------------
    bool testRegression();
    
    // 健壮性测试方法
    //-------------------------------------------------------------
    //【函数名称】testMultipleNetworks
    //【函数功能】测试多个网络文件处理能力
    //【参数】无
    //【返回值】bool，测试是否通过
    //【开发者及日期】林钲凯 2025-07-29
    //【更改记录】
    //-------------------------------------------------------------
    bool testMultipleNetworks();
    
public:
    //-------------------------------------------------------------
    //【函数名称】NeuralNetworkTester
    //【函数功能】构造函数，初始化测试器对象
    //【参数】ctrl：网络控制器引用
    //【返回值】无
    //【开发者及日期】林钲凯 2025-07-29
    //【更改记录】
    //-------------------------------------------------------------
    explicit NeuralNetworkTester(NetworkController& ctrl);
    
    //-------------------------------------------------------------
    //【函数名称】~NeuralNetworkTester
    //【函数功能】析构函数，默认析构
    //【参数】无
    //【返回值】无
    //【开发者及日期】林钲凯 2025-07-29
    //【更改记录】
    //-------------------------------------------------------------
    ~NeuralNetworkTester() = default;
    
    // 禁用拷贝构造和赋值操作符（遵循OOP原则）
    NeuralNetworkTester(const NeuralNetworkTester&) = delete;
    NeuralNetworkTester& operator=(const NeuralNetworkTester&) = delete;
    
    //-------------------------------------------------------------
    //【函数名称】runAllTests
    //【函数功能】运行所有测试的主接口方法
    //【参数】无
    //【返回值】bool，所有测试是否通过
    //【开发者及日期】林钲凯 2025-07-29
    //【更改记录】
    //-------------------------------------------------------------
    bool runAllTests();
    
    // 获取测试统计信息的访问器方法
    //-------------------------------------------------------------
    //【函数名称】getPassedTests
    //【函数功能】获取已通过的测试数量
    //【参数】无
    //【返回值】int，通过的测试数量
    //【开发者及日期】林钲凯 2025-07-29
    //【更改记录】
    //-------------------------------------------------------------
    int getPassedTests() const { return passedTests; }
    
    //-------------------------------------------------------------
    //【函数名称】getTotalTests
    //【函数功能】获取总测试数量
    //【参数】无
    //【返回值】int，总测试数量
    //【开发者及日期】林钲凯 2025-07-29
    //【更改记录】
    //-------------------------------------------------------------
    int getTotalTests() const { return totalTests; }
    
    //-------------------------------------------------------------
    //【函数名称】getSuccessRate
    //【函数功能】计算测试成功率
    //【参数】无
    //【返回值】double，成功率百分比
    //【开发者及日期】林钲凯 2025-07-29
    //【更改记录】
    //-------------------------------------------------------------
    double getSuccessRate() const { 
        return totalTests > 0 ? (100.0 * passedTests / totalTests) : 0.0; 
    }
};

#endif // NEURAL_NETWORK_TESTER_HPP
