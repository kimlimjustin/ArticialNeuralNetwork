//-------------------------------------------------------------
//【文件名】ActivationFunction.hpp
//【功能模块和目的】神经网络激活函数抽象基类声明
//【开发者及日期】林钲凯 2025-07-27
//【更改记录】
//-------------------------------------------------------------

#ifndef ActivationFunction_hpp
#define ActivationFunction_hpp

#include <memory>
#include <string>

using namespace std;

//-------------------------------------------------------------
//【类名】ActivationFunction
//【功能】激活函数抽象基类，定义接口
//【说明】支持多种非线性变换
//【开发者及日期】林钲凯 2025-07-27
//【更改记录】
//-------------------------------------------------------------
class ActivationFunction {
public:
    //-------------------------------------------------------------
    //【函数名称】ActivationFunction
    //【函数功能】默认构造函数
    //【参数】无
    //【返回值】无
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    ActivationFunction() = default;
    
    //-------------------------------------------------------------
    //【函数名称】ActivationFunction（拷贝构造）
    //【函数功能】拷贝构造函数
    //【参数】other：被拷贝的激活函数
    //【返回值】无
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    ActivationFunction(const ActivationFunction& other) = default;
    
    //-------------------------------------------------------------
    //【函数名称】operator=
    //【函数功能】赋值运算符重载
    //【参数】other：赋值来源激活函数
    //【返回值】ActivationFunction&，自身引用
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    ActivationFunction& operator=(const ActivationFunction& other) = default;
    
    //-------------------------------------------------------------
    //【函数名称】~ActivationFunction
    //【函数功能】虚析构函数
    //【参数】无
    //【返回值】无
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    virtual ~ActivationFunction() = default;
    
    //-------------------------------------------------------------
    //【函数名称】activate
    //【函数功能】对输入值进行激活变换
    //【参数】x：输入值
    //【返回值】double，激活后输出
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    virtual double activate(double x) const = 0;
    
    //-------------------------------------------------------------
    //【函数名称】getName
    //【函数功能】获取激活函数名称
    //【参数】无
    //【返回值】string，函数名
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    virtual string getName() const = 0;
    
    //-------------------------------------------------------------
    //【函数名称】clone
    //【函数功能】克隆激活函数对象
    //【参数】无
    //【返回值】unique_ptr<ActivationFunction>，克隆对象
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    virtual unique_ptr<ActivationFunction> clone() const = 0;
};

//-------------------------------------------------------------
//【函数名称】createActivationFunction
//【函数功能】根据名称创建激活函数对象
//【参数】name：激活函数名称
//【返回值】unique_ptr<ActivationFunction>，激活函数对象
//【开发者及日期】林钲凯 2025-07-27
//【更改记录】
//-------------------------------------------------------------
unique_ptr<ActivationFunction> createActivationFunction(const string& name);

#endif // ActivationFunction_hpp
