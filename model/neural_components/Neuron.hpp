//-------------------------------------------------------------
//【文件名】Neuron.hpp
//【功能模块和目的】神经元类声明
//【开发者及日期】林钲凯 2025-07-27
//【更改记录】
//-------------------------------------------------------------

#ifndef Neuron_hpp
#define Neuron_hpp

#include "Synapse.hpp"
#include "../activation_functions/ActivationFunction.hpp"
#include <vector>
#include <memory>

using namespace std;

//-------------------------------------------------------------
//【类名】Neuron
//【功能】人工神经元，支持突触连接、信号处理
//【说明】包含输入/输出突触、偏置、激活函数等
//【开发者及日期】林钲凯 2025-07-27
//【更改记录】
//-------------------------------------------------------------
class Neuron {
private:
    double m_bias;
    vector<unique_ptr<Synapse>> m_inputSynapses;
    vector<unique_ptr<Synapse>> m_outputSynapses;
    unique_ptr<ActivationFunction> m_activationFunction;
    double m_lastOutput;
    bool m_hasComputedOutput;
public:
    //-------------------------------------------------------------
    //【函数名称】Neuron
    //【函数功能】神经元构造函数
    //【参数】bias：偏置，activationFunction：激活函数指针
    //【返回值】无
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    explicit Neuron(double bias = 0.0, unique_ptr<ActivationFunction> activationFunction = nullptr);
    
    //-------------------------------------------------------------
    //【函数名称】Neuron（拷贝构造）
    //【函数功能】拷贝构造函数
    //【参数】other：被拷贝的神经元
    //【返回值】无
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    Neuron(const Neuron& other);
    
    //-------------------------------------------------------------
    //【函数名称】operator=
    //【函数功能】赋值运算符重载
    //【参数】other：赋值来源神经元
    //【返回值】Neuron&，自身引用
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    Neuron& operator=(const Neuron& other);
    
    //-------------------------------------------------------------
    //【函数名称】~Neuron
    //【函数功能】析构函数
    //【参数】无
    //【返回值】无
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    ~Neuron();
    
    //-------------------------------------------------------------
    //【函数名称】getBias
    //【函数功能】获取神经元偏置
    //【参数】无
    //【返回值】double，偏置值
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    double getBias() const;
    
    //-------------------------------------------------------------
    //【函数名称】setBias
    //【函数功能】设置神经元偏置
    //【参数】bias：新偏置
    //【返回值】无
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    void setBias(double bias);
    
    //-------------------------------------------------------------
    //【函数名称】getActivationFunction
    //【函数功能】获取激活函数指针
    //【参数】无
    //【返回值】const ActivationFunction*，激活函数指针
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    const ActivationFunction* getActivationFunction() const;

    //-------------------------------------------------------------
    //【函数名称】setActivationFunction
    //【函数功能】设置激活函数
    //【参数】activationFunction：激活函数指针
    //【返回值】无
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    void setActivationFunction(unique_ptr<ActivationFunction> activationFunction);

    //-------------------------------------------------------------
    //【函数名称】addInputSynapse
    //【函数功能】添加输入突触（树突）
    //【参数】synapse：输入突触指针
    //【返回值】无
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    void addInputSynapse(unique_ptr<Synapse> synapse);

    //-------------------------------------------------------------
    //【函数名称】addOutputSynapse
    //【函数功能】添加输出突触（轴突分支）
    //【参数】synapse：输出突触指针
    //【返回值】无
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    void addOutputSynapse(unique_ptr<Synapse> synapse);

    //-------------------------------------------------------------
    //【函数名称】getInputSynapseCount
    //【函数功能】获取输入突触数量
    //【参数】无
    //【返回值】int，输入突触数量
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    int getInputSynapseCount() const;

    //-------------------------------------------------------------
    //【函数名称】getOutputSynapseCount
    //【函数功能】获取输出突触数量
    //【参数】无
    //【返回值】int，输出突触数量
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    int getOutputSynapseCount() const;

    //-------------------------------------------------------------
    //【函数名称】getInputSynapse
    //【函数功能】获取指定输入突触指针
    //【参数】index：索引
    //【返回值】const Synapse*，输入突触指针
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    const Synapse* getInputSynapse(int index) const;

    //-------------------------------------------------------------
    //【函数名称】getOutputSynapse
    //【函数功能】获取指定输出突触指针
    //【参数】index：索引
    //【返回值】const Synapse*，输出突触指针
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    const Synapse* getOutputSynapse(int index) const;

    //-------------------------------------------------------------
    //【函数名称】removeInputSynapse
    //【函数功能】移除指定输入突触
    //【参数】index：索引
    //【返回值】bool，是否移除成功
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    bool removeInputSynapse(int index);

    //-------------------------------------------------------------
    //【函数名称】removeOutputSynapse
    //【函数功能】移除指定输出突触
    //【参数】index：索引
    //【返回值】bool，是否移除成功
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    bool removeOutputSynapse(int index);

    //-------------------------------------------------------------
    //【函数名称】connectTo
    //【函数功能】连接到目标神经元
    //【参数】targetNeuron：目标神经元，weight：权重
    //【返回值】bool，是否连接成功
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    bool connectTo(Neuron& targetNeuron, double weight);

    //-------------------------------------------------------------
    //【函数名称】computeOutput
    //【函数功能】计算神经元输出
    //【参数】inputs：输入信号集合
    //【返回值】double，输出值
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    double computeOutput(const vector<double>& inputs);

    //-------------------------------------------------------------
    //【函数名称】getLastOutput
    //【函数功能】获取上一次输出值
    //【参数】无
    //【返回值】double，上一次输出
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    double getLastOutput() const;

    //-------------------------------------------------------------
    //【函数名称】hasValidOutput
    //【函数功能】判断输出值是否有效
    //【参数】无
    //【返回值】bool，输出是否有效
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    bool hasValidOutput() const;

    //-------------------------------------------------------------
    //【函数名称】resetComputationState
    //【函数功能】重置计算状态
    //【参数】无
    //【返回值】无
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    void resetComputationState();

    //-------------------------------------------------------------
    //【函数名称】isValid
    //【函数功能】判断神经元结构是否合法
    //【参数】无
    //【返回值】bool，结构是否合法
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    bool isValid() const;

    //-------------------------------------------------------------
    //【函数名称】disconnectAll
    //【函数功能】断开所有突触连接
    //【参数】无
    //【返回值】无
    //【开发者及日期】林钲凯 2025-07-27
    //【更改记录】
    //-------------------------------------------------------------
    void disconnectAll();
};

#endif // Neuron_hpp
